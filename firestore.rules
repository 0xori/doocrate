service cloud.firestore {
  match /databases/{database}/documents {
    
    // TODO: not sure why but this cause update to fail
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isUserAssigneeOrCreator() {
      return request.auth.uid == resource.assignee.id || isCreator();
    }

    function isCreator() {
      return request.auth.uid == resource.creator.id;
    }

    function isTaskUnassigned() {
      return resource.data.assignee == null
      && request.resource.data.size() == 1
      && request.resource.data.keys().hasAll(['assignee']);
    }

    match /tasks/{anyTask} {
    	allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null
        && ((isUserAssigneeOrCreator() ) || isTaskUnassigned());
      allow delete: if request.auth != null
        && (isUserAssigneeOrCreator() ) ;

        // Auth users can assign themself to task if no one assigned
        match /assignee {
          allow write: if request.auth != null && request.resource.data == null;
        }
    }
  

    match /comments/{anyComment} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null
        && isCreator();
      allow delete: if request.auth != null
        && isCreator();
    }

    match /users/{userId} {
      allow read: if request.auth != null; // Auth users can read
      allow write: if userId == request.auth.uid;
    }
    
    match /admins/{anyAdmin} {
      allow read: if false;
    }
  }
}